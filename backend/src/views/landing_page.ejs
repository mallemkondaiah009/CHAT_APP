<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Judas - Real-Time Communication Made Simple</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #8B5CF6 0%, #A78BFA 100%);
            color: #333;
            overflow-x: hidden;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Header */
        header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            box-shadow: 0 2px 20px rgba(139, 92, 246, 0.1);
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 0;
        }

        .logo {
            display: flex;
            align-items: center;
            font-size: 1.5rem;
            font-weight: bold;
            color: #8B5CF6;
        }

        .logo::before {
            content: "💬";
            margin-right: 0.5rem;
            font-size: 1.8rem;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
        }

        .nav-links a {
            text-decoration: none;
            color: #333;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .nav-links a:hover {
            color: #8B5CF6;
        }

        /* Hero Section */
        .hero {
            min-height: 100vh;
            display: flex;
            align-items: center;
            padding-top: 80px;
            background: linear-gradient(135deg, #8B5CF6 0%, #A78BFA 50%, #C4B5FD 100%);
            position: relative;
            overflow: hidden;
        }

        .hero::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="%23ffffff" stroke-width="0.5" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            opacity: 0.3;
        }

        .hero-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 4rem;
            align-items: center;
            position: relative;
            z-index: 1;
        }

        .hero-text h1 {
            font-size: 3.5rem;
            font-weight: 800;
            color: white;
            margin-bottom: 1.5rem;
            line-height: 1.2;
        }

        .hero-text p {
            font-size: 1.2rem;
            color: rgba(255, 255, 255, 0.9);
            margin-bottom: 2rem;
            line-height: 1.6;
        }

        .hero-buttons {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .btn-primary {
            background: white;
            color: #8B5CF6;
            padding: 1rem 2rem;
            border: none;
            border-radius: 50px;
            font-weight: 600;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        }

        .stats {
            display: flex;
            gap: 2rem;
            color: white;
        }

        .stat {
            text-align: center;
        }

        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            display: block;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        /* Chat Demo */
        .chat-demo {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 20px 60px rgba(139, 92, 246, 0.2);
            position: relative;
            overflow: hidden;
        }

        .chat-header {
            display: flex;
            align-items: center;
            padding-bottom: 1rem;
            border-bottom: 1px solid #E5E7EB;
            margin-bottom: 1rem;
        }

        .chat-header h3 {
            color: #8B5CF6;
            margin-left: 1rem;
        }

        .online-indicator {
            width: 12px;
            height: 12px;
            background: #10B981;
            border-radius: 50%;
            display: inline-block;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        .chat-messages {
            height: 300px;
            overflow-y: auto;
            margin-bottom: 1rem;
        }

        .message {
            display: flex;
            margin-bottom: 1rem;
            animation: slideIn 0.5s ease;
        }

        @keyframes slideIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .message.sent {
            justify-content: flex-end;
        }

        .message-content {
            max-width: 70%;
            padding: 0.75rem 1rem;
            border-radius: 18px;
            position: relative;
        }

        .message.received .message-content {
            background: #F3F4F6;
            color: #333;
        }

        .message.sent .message-content {
            background: linear-gradient(135deg, #8B5CF6, #A78BFA);
            color: white;
        }

        .message-info {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 0.25rem;
            font-size: 0.8rem;
        }

        .user-status {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            display: inline-block;
        }

        .user-status.online {
            background: #10B981;
        }

        .user-status.offline {
            background: #6B7280;
        }

        .message-text {
            margin-bottom: 0.25rem;
        }

        .message-time {
            font-size: 0.7rem;
            opacity: 0.7;
        }

        .media-preview {
            width: 150px;
            height: 100px;
            background: linear-gradient(135deg, #8B5CF6, #A78BFA);
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            margin-top: 0.5rem;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .media-preview:hover {
            transform: scale(1.05);
        }

        .chat-input {
            display: flex;
            gap: 0.5rem;
            padding: 1rem;
            background: #F9FAFB;
            border-radius: 15px;
        }

        .chat-input input {
            flex: 1;
            border: none;
            background: transparent;
            padding: 0.5rem;
            outline: none;
            font-size: 1rem;
        }

        .send-button {
            background: linear-gradient(135deg, #8B5CF6, #A78BFA);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 10px;
            cursor: pointer;
            transition: transform 0.2s ease;
        }

        .send-button:hover {
            transform: scale(1.05);
        }

        /* Features Section */
        .features {
            padding: 6rem 0;
            background: white;
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 3rem;
            margin-top: 3rem;
        }

        .feature-card {
            text-align: center;
            padding: 2rem;
            border-radius: 20px;
            background: linear-gradient(135deg, #F8FAFC, #F1F5F9);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .feature-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 25px 50px rgba(139, 92, 246, 0.15);
        }

        .feature-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #8B5CF6, #A78BFA);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            font-size: 2rem;
        }

        .feature-card h3 {
            color: #8B5CF6;
            margin-bottom: 1rem;
            font-size: 1.5rem;
        }

        .feature-card p {
            color: #6B7280;
            line-height: 1.6;
        }

        /* Section Headers */
        .section-header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .section-header h2 {
            font-size: 2.5rem;
            color: #8B5CF6;
            margin-bottom: 1rem;
        }

        .section-header p {
            font-size: 1.2rem;
            color: #6B7280;
            max-width: 600px;
            margin: 0 auto;
        }

        /* Footer */
        footer {
            background: #1F2937;
            color: white;
            padding: 3rem 0;
            text-align: center;
        }

        .footer-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .footer-section h3 {
            color: #8B5CF6;
            margin-bottom: 1rem;
        }

        .footer-section a {
            color: #D1D5DB;
            text-decoration: none;
            display: block;
            margin-bottom: 0.5rem;
            transition: color 0.3s ease;
        }

        .footer-section a:hover {
            color: #8B5CF6;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .hero-content {
                grid-template-columns: 1fr;
                text-align: center;
                gap: 2rem;
            }

            .hero-text h1 {
                font-size: 2.5rem;
            }

            .nav-links {
                display: flex;
                gap: 1rem;
                position: static;
                transform: none;
                flex-wrap: wrap;
                justify-content: center;
            }

            .nav-links a {
                font-size: 0.9rem;
            }

            .stats {
                justify-content: center;
            }

            .send-button {
                padding: 0.4rem 0.8rem;
                font-size: 0.9rem;
            }
        }

        /* Animation for typing indicator */
        .typing-indicator {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            color: #6B7280;
            font-style: italic;
        }

        .typing-dots {
            display: flex;
            gap: 0.25rem;
        }

        .typing-dot {
            width: 6px;
            height: 6px;
            background: #8B5CF6;
            border-radius: 50%;
            animation: typing 1.4s infinite;
        }

        .typing-dot:nth-child(2) {
            animation-delay: 0.2s;
        }

        .typing-dot:nth-child(3) {
            animation-delay: 0.4s;
        }

        @keyframes typing {
            0%, 60%, 100% {
                transform: translateY(0);
                opacity: 0.4;
            }
            30% {
                transform: translateY(-10px);
                opacity: 1;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <nav class="container">
            <div class="logo">Judas</div>
            <ul class="nav-links">
                <li><a href="#features">Features</a></li>
                <li><a href="#pricing">Pricing</a></li>
                <li><a href="#about">About</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
        </nav>
    </header>

    <!-- Hero Section -->
    <section class="hero">
        <div class="container">
            <div class="hero-content">
                <div class="hero-text">
                    <h1>Connect Instantly with Judas</h1>
                    <p>Experience real-time messaging like never before. Share media, see who's online, and stay connected with crystal-clear communication.</p>
                    <div class="hero-buttons">
                        <a href="#" class="btn-primary" onclick="checkAuth()">Get Started</a>
                    </div>
                    <div class="stats">
                        <div class="stat">
                            <span class="stat-number" id="activeUsers">1,247</span>
                            <span class="stat-label">Active Users</span>
                        </div>
                        <div class="stat">
                            <span class="stat-number">50K+</span>
                            <span class="stat-label">Messages Today</span>
                        </div>
                        <div class="stat">
                            <span class="stat-number">99.9%</span>
                            <span class="stat-label">Uptime</span>
                        </div>
                    </div>
                </div>
                <div class="chat-demo">
                    <div class="chat-header">
                        <span class="online-indicator"></span>
                        <h3>Team Chat</h3>
                        <span style="margin-left: auto; color: #10B981; font-size: 0.9rem;">3 online</span>
                    </div>
                    <div class="chat-messages" id="chatMessages">
                        <div class="message received">
                            <div class="message-content">
                                <div class="message-info">
                                    <span class="user-status online"></span>
                                    <strong>Sarah</strong>
                                </div>
                                <div class="message-text">Hey everyone! Ready for today's meeting? 👋</div>
                                <div class="message-time">2:34 PM</div>
                            </div>
                        </div>
                        <div class="message received">
                            <div class="message-content">
                                <div class="message-info">
                                    <span class="user-status online"></span>
                                    <strong>Mike</strong>
                                </div>
                                <div class="message-text">Absolutely! I've prepared the presentation slides.</div>
                                <div class="media-preview" onclick="showMediaPreview()">
                                    📊 presentation.pptx
                                </div>
                                <div class="message-time">2:35 PM</div>
                            </div>
                        </div>
                        <div class="message sent">
                            <div class="message-content">
                                <div class="message-info">
                                    <span class="user-status online"></span>
                                    <strong>You</strong>
                                </div>
                                <div class="message-text">Perfect! I'll share the latest data in a moment.</div>
                                <div class="message-time">2:36 PM</div>
                            </div>
                        </div>
                        <div class="message received">
                            <div class="message-content">
                                <div class="message-info">
                                    <span class="user-status offline"></span>
                                    <strong>Anna</strong>
                                </div>
                                <div class="message-text">Sorry, running a bit late! Be there in 5 mins 🏃‍♀️</div>
                                <div class="message-time">2:37 PM</div>
                            </div>
                        </div>
                    </div>
                    <div class="typing-indicator" id="typingIndicator" style="display: none;">
                        <span>Mike is typing</span>
                        <div class="typing-dots">
                            <div class="typing-dot"></div>
                            <div class="typing-dot"></div>
                            <div class="typing-dot"></div>
                        </div>
                    </div>
                    <div class="chat-input">
                        <input type="text" placeholder="Type your message..." id="messageInput">
                        <button class="send-button" onclick="sendMessage()">Send</button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class="features" id="features">
        <div class="container">
            <div class="section-header">
                <h2>Powerful Features for Modern Communication</h2>
                <p>Everything you need to stay connected, collaborate effectively, and share moments that matter.</p>
            </div>
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">⚡</div>
                    <h3>Real-Time Messaging</h3>
                    <p>Instant message delivery with read receipts and typing indicators. Experience conversations as they happen.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">📱</div>
                    <h3>Media Sharing</h3>
                    <p>Share photos, videos, documents, and files seamlessly. Preview media instantly without leaving the chat.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">👥</div>
                    <h3>User Status</h3>
                    <p>See who's online, offline, or away. Know when your team members are available for instant communication.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">🔒</div>
                    <h3>Secure & Private</h3>
                    <p>End-to-end encryption ensures your conversations stay private. Your data is protected with enterprise-grade security.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">🌐</div>
                    <h3>Cross-Platform</h3>
                    <p>Available on web, mobile, and desktop. Stay connected across all your devices with seamless synchronization.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">⚙️</div>
                    <h3>Smart Features</h3>
                    <p>Message reactions, threading, search, and smart notifications keep your conversations organized and efficient.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="footer-section">
                    <h3>Product</h3>
                    <a href="#">Features</a>
                    <a href="#">Pricing</a>
                    <a href="#">API</a>
                    <a href="#">Downloads</a>
                </div>
                <div class="footer-section">
                    <h3>Company</h3>
                    <a href="#">About</a>
                    <a href="#">Careers</a>
                    <a href="#">Blog</a>
                    <a href="#">Press</a>
                </div>
                <div class="footer-section">
                    <h3>Support</h3>
                    <a href="#">Help Center</a>
                    <a href="#">Contact</a>
                    <a href="#">Status</a>
                    <a href="#">Privacy Policy</a>
                </div>
            </div>
            <p>© 2024 Judas. All rights reserved. Made with 💜 for better communication.</p>
        </div>
    </footer>

    <script>
        // Authentication check using API
        async function checkAuth() {
            try {
                const response = await fetch('https://judas-dsaj.onrender.com/api/auth/check', {
                    method: 'GET',
                    credentials: 'include' // Include cookies for session-based auth
                });
                
                if (response.ok) {
                    const data = await response.json();
                    if (data._id) {
                        window.location.href = '/home'; // Redirect to home page if user has an ID
                    } else {
                        window.location.href = '/signup'; // Redirect to signup page if no user ID
                    }
                } else {
                    console.error('Auth check failed:', response.status);
                    window.location.href = '/signup'; // Fallback to signup on error
                }
            } catch (error) {
                console.error('Error checking auth:', error);
                window.location.href = '/signup'; // Fallback to signup on network error
            }
        }

        // Active users counter animation
        function animateCounter() {
            const counter = document.getElementById('activeUsers');
            const start = 1200;
            const end = 1247;
            const duration = 2000;
            const increment = (end - start) / (duration / 16);
            let current = start;
            
            const timer = setInterval(() => {
                current += increment;
                if (current >= end) {
                    current = end;
                    clearInterval(timer);
                }
                counter.textContent = Math.floor(current).toLocaleString();
            }, 16);
        }

        // Simulate new messages
        function addMessage(user, text, sent = false, online = true) {
            const messagesContainer = document.getElementById('chatMessages');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sent ? 'sent' : 'received'}`;
            
            const currentTime = new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
            
            messageDiv.innerHTML = `
                <div class="message-content">
                    <div class="message-info">
                        <span class="user-status ${online ? 'online' : 'offline'}"></span>
                        <strong>${user}</strong>
                    </div>
                    <div class="message-text">${text}</div>
                    <div class="message-time">${currentTime}</div>
                </div>
            `;
            
            messagesContainer.appendChild(messageDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        // Send message function
        function sendMessage() {
            const input = document.getElementById('messageInput');
            const message = input.value.trim();
            
            if (message) {
                addMessage('You', message, true);
                input.value = '';
                
                // Simulate typing indicator
                setTimeout(() => {
                    showTyping();
                    setTimeout(() => {
                        hideTyping();
                        simulateResponse();
                    }, 1500);
                }, 500);
            }
        }

        // Show typing indicator
        function showTyping() {
            const indicator = document.getElementById('typingIndicator');
            indicator.style.display = 'flex';
        }

        // Hide typing indicator
        function hideTyping() {
            const indicator = document.getElementById('typingIndicator');
            indicator.style.display = 'none';
        }

        // Simulate response
        function simulateResponse() {
            const responses = [
                "That's a great idea! Let's implement it.",
                "I agree! When should we start?",
                "Sounds perfect. I'll prepare the requirements.",
                "Excellent! This will really help our productivity.",
                "Let me know if you need any help with that!"
            ];
            const randomResponse = responses[Math.floor(Math.random() * responses.length)];
            addMessage('Mike', randomResponse, false, true);
        }

        // Handle Enter key in input
        document.getElementById('messageInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        // Show media preview
        function showMediaPreview() {
            alert('📊 Media preview: This would open the presentation file in a full-screen viewer with download options.');
        }

        // Auto-update user count
        function updateUserCount() {
            const counter = document.getElementById('activeUsers');
            const current = parseInt(counter.textContent.replace(',', ''));
            const change = Math.floor(Math.random() * 10) - 5; // Random change between -5 and +5
            const newCount = Math.max(1200, current + change);
            counter.textContent = newCount.toLocaleString();
        }

        // Initialize animations and interactions
        document.addEventListener('DOMContentLoaded', function() {
            // Animate counter on load
            setTimeout(animateCounter, 500);
            
            // Update user count every 30 seconds
            setInterval(updateUserCount, 30000);
            
            // Add scroll effects
            window.addEventListener('scroll', function() {
                const header = document.querySelector('header');
                if (window.scrollY > 100) {
                    header.style.background = 'rgba(255, 255, 255, 0.98)';
                } else {
                    header.style.background = 'rgba(255, 255, 255, 0.95)';
                }
            });
            
            // Simulate periodic activity
            setInterval(() => {
                if (Math.random() > 0.7) {
                    const users = ['Sarah', 'Mike', 'Anna', 'David', 'Emma'];
                    const messages = [
                        "Just joined the team! 👋",
                        "Working on the new features",
                        "Great progress today!",
                        "Let's sync up later",
                        "Shared the latest updates"
                    ];
                    
                    const randomUser = users[Math.floor(Math.random() * users.length)];
                    const randomMessage = messages[Math.floor(Math.random() * messages.length)];
                    const isOnline = Math.random() > 0.3;
                    
                    if (document.getElementById('chatMessages').children.length < 10) {
                        addMessage(randomUser, randomMessage, false, isOnline);
                    }
                }
            }, 15000);
        });

        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });
    </script>
</body>
</html>